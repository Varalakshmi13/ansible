- name: Play level vars
  hosts: all
  vars:
    URL: play.google.com
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}

- name: Play level variables from files
  hosts: all
  vars_files:
    - sample-vars.yml
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}


- name: Task level variables
  hosts: all
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}
      vars:
        URL: tasks.google.com

#if we declare var at task level the only that task can access the variable

- name: inventory level variables
  hosts: all
  tasks:
    - name: Print URL
      ansible.builtin.debug:
        msg: URL = {{URL}}

#command line variable :
        #ansible-playbook -i inv -u centos -k 02-vars.yml -e URL=cli.google.com
        #cli has first precedence
    #order :  cli > task level > vars from file > play level > inv


- name: Fact variables
  hosts: all
  tasks:
    - name: Print Hostname
      ansible.builtin.debug:
        msg: Architecture = {{ansible_architecture}}

# to not to prompt for pwd :  git pull;ansible-playbook -i inv -u centos -e ansible_password=DevOps321  02-vars.yml -e Architecture=32

- name: Register var
  hosts: all
  tasks:
    - name: Run schell module
      ansible.builtin.shell: uptime
      register: OUT

    - name: print output of shell
      ansible.builtin.debug:
        msg: "{{OUT.stdout}}"   #Sstarted with variable, o we used quote

    - name: Set a fact #you are declaring variable in between and you are using it for remaining playbook using facts
      ansible.builtin.set_fact:
        OUTPUT: "{{OUT.stdout}}"

    - name: print output of shell
      ansible.builtin.debug:
        msg: "{{OUTPUT}}"


